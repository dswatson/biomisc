% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_resid.R
\name{check_resid}
\alias{check_resid}
\title{Check the residuals of a DESeq model}
\usage{
check_resid(dds, filter = c(1, 1))
}
\arguments{
\item{dds}{A \code{DESeqDataSet} object that has been fit with a negative
binomial GLM.}

\item{filter}{Numeric vector of length two specifying the filter criterion. Each 
probe must have at least \code{filter[1]} log2-counts per million in at least 
\code{filter[2]} libraries to pass the expression threshold.}
}
\description{
This function evaluates the impact of different expression filters on the 
residuals of a fitted DESeqDataSet.
}
\details{
The statistical tests upon which \code{qmod} is based presume that residuals
for a fitted model are approximately normally distributed. This is not generally
true of negative binomal GLMs, the family of models used by DESeq. The 
non-normality of residuals is especially pronounced for low count probes, which are
by default not filtered out until after modeling in the DESeq pipeline. (See 
\code{\link[DESeq2]{results}} for more details.) To run \code{qmod} on 
\code{DESeqDataSet} objects, it is necessary to filter out underexpressed probes 
and apply a variance stabilizing transformation. We recommend applying the lightest
possible expression filter, although there is no precise algorithm for determining
what this should be. 

As a rule of thumb, the \code{limma} authors advise setting \code{filter[1]} to 10 
/ (\emph{L} / 1,000,000), where \emph{L} = the minimum library size for a given 
count matrix; and setting \code{filter[2]} to the number of replicates in the 
largest group. These are broad guidelines, however, not strict rules.
}
\examples{
library(DESeq2)
dds <- makeExampleDEESeqDataSet()
dds <- DESeq(dds)
check_resid(dds)

}
